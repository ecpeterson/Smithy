important
=========
editing:
+ bug: lines read in from map files don't have their length set
    * NOTE: Forge doesn't write line lengths to unmerged map files.  In
            addition, this isn't something we can do at load time because
                a) what if we read our LINS chunk before our PNTS chunk?
                b) the points array is stored in the MapFormat module, which is
                   inaccessible to the MapTypes module, which is where the magic
                   actually happens.  In order to compute line lengths we need
                   access (obviously) to point coordinates, not just point
                   indices, which is what is stored in the map data itself.
            I posit that we don't actually need this feature, and the statusbar
            can compute it when it needs it, which is probably how we're
            handling things now anyway.  -ecp
+ bug: sometimes deleting points doesn't work?
interface:
+ bug: map height dialog doesn't actually work properly
    * NOTE: fixed the modalness of this dialog, problems now include
        1) can open multiple instances of the dialog
        2) we draw lines and points regardless of their attached polygon
           heights, which is going to be disappointingly messy to fix :(
+ bug: goto dialog needs to be made non-modal (was: error handling)
    * NOTE: fixed out of bounds errors and wrapped the whole thing in a try
            block because, i agree, seeing int_of_string exceptions is annoying.
            it would be nice if this dialog were also nonmodal.
+ dragging points ignores 'constrain to grid'
code:
+ everything is quite slow/laggy under windows (something like 6-10x slower than linux)... why?
    * Actually, the object inspection dialog box is really really slow under
      Linux as well.

less important
=========
editing:
+ add Shapes reading support, at least for wall textures
+ add ceiling / floor texturing support
+ add Pfhorte- / Obed-style texturing
+ VISUAL MODE
+ add a terminal editor
+ read from merged maps
+ merge maps
+ read in optimized chunks ( <- partially implemented! )
+ write out optimized chunks ( <- do we really need this? )
+ don't leave objects outside of a polygon when moving the vertices of the polygon
interface:
+ write single level undo
+ write multiple level undo
+ arrow keys should move points/lines/polygons around
+ display highlighted objects somehow
+ drawing a new line should highlight the endpoint when done
code:
+ comment those ridiculous algorithms
+ finish the enumerative / bitmask type conversion in MapTypes.ml
+ add .mli files!
+ change the select_line_loop routine to use all lists instead of the mix of
lists and arrays, upon second thought using arrays there doesn't actually make
anything faster or slower, and lists are pretty
+ make classes use similar names for similar methods, so we don't have to deal with, for example, point#vertex, obj#point, and anno#location

not important
=========
editing:
+ make the filename string in the map header actually meaningful
interface:
code:
+ some kind of plugin interface would be pretty sweet
+ put strings into Resources.ml or some similar thing for purposes of i18n
+ write polygon tool
